date: Pending

behavior_changes:
# *Changes that are expected to cause an incompatibility if applicable; deployment changes are likely required*

minor_behavior_changes:
# *Changes that may cause incompatibilities for some users, but should not for most*

bug_fixes:
# *Changes expected to improve the state of the world and are unlikely to have negative effects*
- area: dfp
  change:
    Fixes a bug when loading a DNS cache entry with an empty authority/host header. This fix can be reverted by setting
    runtime guard ``envoy.reloadable_features.dfp_fail_on_empty_host_header`` to ``false``.

removed_config_or_runtime:
# *Normally occurs at the end of the* :ref:`deprecation period <deprecated>`

new_features:
- area: lua
  change: |
    Added :ref:`virtualClusterName() <config_http_filters_lua_stream_info_virtual_cluster_name>` API to the Stream Info
    Object to get the name of the virtual cluster matched.
- area: tap
  change: |
    Added an UDP extension for tap custom sink.
- area: udp_proxy
  change: |
    Added support for dynamic cluster selection in UDP proxy. The cluster can be set by one of the session filters
    by setting a per-session state object under the key ``envoy.udp_proxy.cluster``.
- area: filters
  change: |
    Added :ref:`the Api Key Auth filter <envoy_v3_api_msg_extensions.filters.http.api_key_auth.v3.ApiKeyAuth>`, which
    can be used to authenticate requests using an API key.
- area: CEL-attributes
  change: |
    Added :ref:`attribute <arch_overview_attributes>` ``upstream.request_attempt_count``
    to get the number of times a request is attempted upstream.
- area: ip-tagging
  change: |
    Adds support for specifying an alternate header
    :ref:`ip_tag_header <envoy_v3_api_field_extensions.filters.http.ip_tagging.v3.IPTagging.ip_tag_header>`
    for appending IP tags via ip-tagging filter instead of using the default header ``x-envoy-ip-tags``.
- area: c-ares
  change: |
    Added two new options to c-ares resolver for configuring custom timeouts and tries while resolving DNS
    queries. Custom timeouts could be configured by specifying :ref:`query_timeout_seconds
    <envoy_v3_api_field_extensions.network.dns_resolver.cares.v3.CaresDnsResolverConfig.query_timeout_seconds>` and
    custom tries could be configured by specifying :ref:`query_tries
    <envoy_v3_api_field_extensions.network.dns_resolver.cares.v3.CaresDnsResolverConfig.query_tries>`.
- area: rbac
  change: |
    Added :ref:`sourced_metadata <envoy_v3_api_field_config.rbac.v3.Permission.sourced_metadata>` which allows
    specifying an optional source for the metadata to be matched in addition to the metadata matcher.
- area: c-ares
  change: |
    Added nameserver rotation option to c-ares resolver. When enabled via :ref:`rotate_nameservers
    <envoy_v3_api_field_extensions.network.dns_resolver.cares.v3.CaresDnsResolverConfig.rotate_nameservers>`, this
    performs round-robin selection of the configured nameservers for each resolution to help distribute query load.
- area: access_log
  change: |
    Added support for :ref:`%UPSTREAM_HOST_NAME_WITHOUT_PORT% <config_access_log_format_upstream_host_name_without_port>`
    for the upstream host identifier without the port value.
- area: udp_proxy
  change: |
    Added support for coexistence of dynamic and static clusters in the same udp proxy, so we can use dynamic clusters
    for some sessions by setting a per-session state object under the key ``envoy.upstream.dynamic_host`` and routing
    to dynamic cluster, and we can use static clusters for other sessions by setting a per-session state object under
    the key ``envoy.udp_proxy.cluster`` without setting ``envoy.upstream.dynamic_host``.
- area: ext_proc
  change: |
    Added HTTP support in ext_proc filter to perform external processing with HTTP messages.
- area: ext_authz
  change: |
    Added filter state field ``latency_us``, ``bytesSent`` and ``bytesReceived`` access for CEL and logging.
- area: sni_dynamic_forward_proxy
  change: |
    Added support in SNI dynamic forward proxy for saving the resolved upstream address in the filter state.
    The state is saved with the key ``envoy.stream.upstream_address``.
- area: lua
  change: |
    Added a new ``setUpstreamOverrideHost()`` which could be used to set the given host as the upstream host for the
    current request.
- area: CEL-attributes
  change: |
    Added :ref:`attribute <arch_overview_attributes>` ``upstream.cx_pool_ready_duration``
    to get the duration from when the upstream request was created to when the upstream connection pool is ready.
- area: health_check
  change: |
    Added new health check filter stats including total requests, successful/failed checks, cached responses, and
    cluster health status counters. These stats help track health check behavior and cluster health state.
- area: http
  change: |
    Add :ref:`query parameter mutations
    <envoy_v3_api_field_extensions.filters.http.header_mutation.v3.Mutations.query_parameter_mutations>`
    to :ref:`Header Mutation Filter <envoy_v3_api_msg_extensions.filters.http.header_mutation.v3.HeaderMutation>`
    for adding/removing query parameters on a request.
- area: local_ratelimit
  change: |
    Added per descriptor custom hits addend support for local rate limit filter. See :ref:`hits_addend
    <envoy_v3_api_field_config.route.v3.RateLimit.hits_addend>` for more details.
- area: filters
  change: |
    Updated the ``set_filter_state`` :ref:`filter <config_http_filters_set_filter_state>` to support per-route overrides.
- area: grpc-json
  change: |
    Added a new http filter for :ref:`gRPC to JSON transcoding <config_http_filters_grpc_json_reverse_transcoder>`.
- area: matchers
  change: |
    Added new filter state matcher ip_range to
    :ref:`FilterStateMatcher <envoy_v3_api_msg_type.matcher.v3.FilterStateMatcher>` which attempts to
    cast the filter state object to an IP and match it against a list of CidrRanges. To support
    this, also added an :ref:`AddressMatcher <envoy_v3_api_msg_type.matcher.v3.AddressMatcher>`.
- area: attributes
  change: |
    Added new ``xds.virtual_host_name`` and ``xds.virtual_host_metadata`` attributes support. See
    :ref:`attributes <arch_overview_attributes>` for looking up xDS configuration information.
- area: redis
  change: |
    Added support for ``UNWATCH`` command.
- area: ratelimit
  change: |
    Add the :ref:`rate_limits
    <envoy_v3_api_field_extensions.filters.http.ratelimit.v3.RateLimitPerRoute.rate_limits>`
    field to generate rate limit descriptors. If this field is set, the
    :ref:`VirtualHost.rate_limits <envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits>` or
    :ref:`RouteAction.rate_limits <envoy_v3_api_field_config.route.v3.RouteAction.rate_limits>` fields
    will be ignored.
- area: ratelimit
  change: |
    Add the option to reduce the rate limit budget based on request/response contexts on stream done.
    See :ref:`apply_on_stream_done <envoy_v3_api_field_config.route.v3.RateLimit.apply_on_stream_done>` for more details.
- area: udp_proxy
  change: |
    Added support for :ref:`backoff_options
    <envoy_v3_api_field_extensions.filters.udp.udp_proxy.v3.UdpProxyConfig.UdpTunnelingConfig.RetryOptions.backoff_options>`
    to configure the backoff strategy for UDP proxy retries when tunneling over HTTP.
- area: lua
  change: |
    Added :ref:`routeName() <config_http_filters_lua_stream_info_route_name>` API to the Stream Info Object to get the
    name of the route matched by the filter chain.
- area: ratelimit
  change: |
    added support for query parameter rate limiting via the :ref:`query_parameters
    <envoy_v3_api_field_config.route.v3.RateLimit.Action.query_parameters>` action across HTTP and Thrift. This allows
    rate limiting based on specific query parameter values, with option to control the behavior when the query parameter
    is absent.
- area: access log
  change: |
    Added new command-line flag :option:`--skip-deprecated-logs`.
- area: udp_proxy
  change: |
    Added support for outlier detection in UDP proxy. This change can be temporarily reverted by setting runtime guard
    ``envoy.reloadable_features.enable_udp_proxy_outlier_detection`` to ``false``.
- area: redis
  change: |
    Added support for multi-key commands on transactions.

deprecated:
